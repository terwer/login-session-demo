#=================start全局快,从start到events之间的内容===========================
# 运行用户
#user  nobody;
# worker进程数量,通常设置为和cpu数量相等
worker_processes  1;

# 全局错误日志及pid文件位置
#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;
#=================end,全局块======================================================

#================start,events块(影响nginx服务器和用户的网络连接)=================
events {
	# 单个worker进程的最大连接
    worker_connections  1024;
}
#================end,ecents块====================================================

#================start,http块(nginx服务器中配置最频繁的部分,端口监听,请求转发等)===
http {
    # 引入mine类型定义文件
    include       mime.types;
    default_type  application/octet-stream;
    # 设定日志格式
    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;
	# 连接超时时间
    #keepalive_timeout  0;
    keepalive_timeout  65;
	# 开启gzip压缩
    #gzip  on;

    upstream loginServer{
       # 为了测试方便，使用127.0.0.1
       server 127.0.0.1:8080;
       server 127.0.0.1:8081;
       # server 192.168.136.134:8080;
       # server 192.168.136.134:8081;
    }

    server {
	    # 监听的端口
        listen       80;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

	    # 默认请求
        location / {
		    proxy_pass http://loginServer/;
            # root   html;
            # index  index.html index.htm;
        }

	    error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        # 错误提示页面
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }
}